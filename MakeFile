# Makefile para FocusNFe Cliente PHP

.PHONY: help install test analyze format clean docker-build docker-test

help: ## Mostra esta mensagem de ajuda
	@echo "Comandos disponíveis:"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-20s\033[0m %s\n", $$1, $$2}'

install: ## Instala as dependências
	composer install

install-dev: ## Instala as dependências de desenvolvimento
	composer install --dev

test: ## Executa os testes
	vendor/bin/phpunit

test-coverage: ## Executa os testes com cobertura
	vendor/bin/phpunit --coverage-html build/coverage

analyze: ## Executa análise estática com PHPStan
	vendor/bin/phpstan analyse src --level=8

format: ## Formata o código (se PHP CS Fixer estiver instalado)
	@if [ -f vendor/bin/php-cs-fixer ]; then \
		vendor/bin/php-cs-fixer fix --dry-run --diff; \
	else \
		echo "PHP CS Fixer não instalado. Execute: composer require --dev friendsofphp/php-cs-fixer"; \
	fi

format-fix: ## Aplica correções de formatação
	@if [ -f vendor/bin/php-cs-fixer ]; then \
		vendor/bin/php-cs-fixer fix; \
	else \
		echo "PHP CS Fixer não instalado. Execute: composer require --dev friendsofphp/php-cs-fixer"; \
	fi

clean: ## Remove arquivos gerados
	rm -rf build/
	rm -rf vendor/
	rm -f composer.lock

docker-build: ## Constrói a imagem Docker
	docker-compose build

docker-test: ## Executa testes no Docker
	docker-compose run --rm php-test

docker-shell: ## Abre shell no container
	docker-compose run --rm focusnfe-client bash

validate: ## Valida o composer.json
	composer validate

security: ## Verifica dependências por vulnerabilidades
	composer audit

example: ## Executa o exemplo de uso
	@echo "Executando exemplo..."
	@if [ -z "$(FOCUS_NFE_TOKEN)" ]; then \
		echo "ERRO: Defina a variável FOCUS_NFE_TOKEN"; \
		exit 1; \
	fi
	php exemplo_uso.php

all: install test analyze ## Executa instalação, testes e análise

ci: install validate test analyze ## Pipeline de CI/CD